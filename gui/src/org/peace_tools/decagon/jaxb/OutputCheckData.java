//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.18 at 06:29:58 PM EDT 
//


package org.peace_tools.decagon.jaxb;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * 
 * 	This type is used to provide additional information about the
 * 	expected output from running a process using a given set of
 * 	command-line arguments. The output information is used to 
 * 	determine if the process completed successfully. The value 
 * 	specified here is treated as a regular expression and not just
 * 	a simple string to provide additional flexibility to perform 
 * 	more robust checks. The output can be from either standard output 
 * 	or standard error. 
 * 			
 * 
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OutputCheckData", namespace = "http://www.peace-tools.org/decagon/", propOrder = {
    "value"
})
public class OutputCheckData {

    @XmlValue
    protected String value;
    @XmlAttribute
    protected Boolean stdout;
    @XmlAttribute
    protected Boolean stderr;

    /**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * 
     * 	If this attribute is set to true then data written to standard output
     * 	stream is used to perform the necessary checks. Otherwise the standard
     * 	output is ignored.
     * 					
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStdout() {
        if (stdout == null) {
            return true;
        } else {
            return stdout;
        }
    }

    /**
     * Sets the value of the stdout property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setStdout(Boolean value) {
        this.stdout = value;
    }

    /**
     * 
     * 	If this attribute is set to true then data written to standard error
     * 	stream is used to perform the necessary checks. Otherwise the standard
     * 	error is ignored.
     * 					
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStderr() {
        if (stderr == null) {
            return true;
        } else {
            return stderr;
        }
    }

    /**
     * Sets the value of the stderr property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setStderr(Boolean value) {
        this.stderr = value;
    }

}
