# This file is processed by automake to generate Makefile.in

#--------------------------------------------------------------------
#
# This file is part of PEACE.
# 
# PEACE is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# PEACE is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with PEACE.  If not, see <http://www.gnu.org/licenses/>.
# 
# Miami University makes no representations or warranties about the
# suitability of the software, either express or implied, including
# but not limited to the implied warranties of merchantability,
# fitness for a particular purpose, or non-infringement.  Miami
# University shall not be liable for any damages suffered by licensee
# as a result of using, result of using, modifying or distributing
# this software or its derivatives.
#
# By using or copying this Software, Licensee agrees to abide by the
# intellectual property laws, and all other applicable laws of the
# U.S., and the terms of GNU General Public License (version 3).
#
# Authors:   Dhananjai M. Rao              raodm@muohio.edu
#
#---------------------------------------------------------------------

include $(top_builddir)/Makefile.common.am

AM_CPPFLAGS=$(GLOBALCPPFLAGS)
AM_CXXFLAGS=$(GLOBALCXXFLAGS)

AM_CPPFLAGS += -Ibaton -Icommon -Ioutput -Iinput -Iframework -Ishared -Ifiltering -Iclustering -Iassembly

SUBDIRS = framework shared input output filtering clustering assembly baton

noinst_LIBRARIES = libpeace.a
bin_PROGRAMS = peace

libpeace_a_SOURCES = \
	PEACE.h \
	PEACE.cpp \
	config.h \
	Version.h

libpeace_a_LIBADD = \
	framework/libframework.a \
	shared/libshared.a \
	output/liboutput.a \
	filtering/libfiltering.a \
	clustering/libclustering.a \
	assembly/libassembly.a \
	baton/libbaton.a \
	input/libinput.a

# An short awk script to convert each "lib.a" to "addlib lib.a"
# form. It also adds a leading "create" and trailing "save end" AR
# commands.  These commands are fed to "ar -M" to create the aggregate
# archive.  This approach is needed because "ar" by default does not
# handle ".a" files directly.
AR_AWK = 'BEGIN{print "create $@"}; {print "addlib " $$1}; END{print "save\nend"};'

# Custom rule to build the peace library as AR by default does not
# handle nested archives correctly. This custom rule overrides the
# default rules generated by automake to perform custom archive
# operations.
libpeace.a: $(libpeace_a_OBJECTS) $(libpeace_a_DEPENDENCIES) $(EXTRA_libpeace_a_DEPENDENCIES)
	$(AM_V_at)-rm -f libpeace.a
	@echo Adding libraries "$(libpeace_a_LIBADD)"
	@echo "$(libpeace_a_LIBADD)" | tr " " "\n" | awk $(AR_AWK) | $(AR) -M
	$(AM_V_AR)$(libpeace_a_AR) libpeace.a $(libpeace_a_OBJECTS) 
	$(AM_V_at)$(RANLIB) libpeace.a


peace_LDFLAGS = -L. $(CUDA_LDPATH)
peace_LDADD = $(STDCPP) libpeace.a

peace_SOURCES = \
	main.cpp\
	InteractiveConsole.h \
	InteractiveConsole.cpp

# end of Makefile.am
