//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.18 at 06:29:58 PM EDT 
//


package org.peace_tools.decagon.jaxb;

import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for Process complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Process">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="cmdLineArgs" type="{http://www.peace-tools.org/decagon/}ArgumentList"/>
 *         &lt;element name="outputCheck" type="{http://www.peace-tools.org/decagon/}OutputCheckData" minOccurs="0"/>
 *         &lt;element name="exitCode" type="{http://www.w3.org/2001/XMLSchema}integer"/>
 *       &lt;/sequence>
 *       &lt;attribute name="executable" use="required" type="{http://www.w3.org/2001/XMLSchema}token" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Process", namespace = "http://www.peace-tools.org/decagon/", propOrder = {
    "cmdLineArgs",
    "outputCheck",
    "exitCode"
})
public class Process {

    @XmlElement(namespace = "http://www.peace-tools.org/decagon/", required = true)
    protected ArgumentList cmdLineArgs;
    @XmlElement(namespace = "http://www.peace-tools.org/decagon/")
    protected OutputCheckData outputCheck;
    @XmlElement(namespace = "http://www.peace-tools.org/decagon/", required = true, defaultValue = "0")
    protected BigInteger exitCode;
    @XmlAttribute(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String executable;

    /**
     * 
     * 						
     * 	This element defines the set of command-line arguments that must be passed
     * 	to the process-exectuable to perform genomic-assembly operation or a step
     * 	in the DECAGON pipeline.
     * 						
     * 					
     * 
     * @return
     *     possible object is
     *     {@link ArgumentList }
     *     
     */
    public ArgumentList getCmdLineArgs() {
        return cmdLineArgs;
    }

    /**
     * Sets the value of the cmdLineArgs property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArgumentList }
     *     
     */
    public void setCmdLineArgs(ArgumentList value) {
        this.cmdLineArgs = value;
    }

    /**
     * 
     * 						
     * 	This element can be used to provide additional information to 
     * 	automatically perform some basic verification about the
     * 	expected output from running the process using the given arguments.
     * 	The value specified here is	treated as a regular expression and not
     * 	just a simple string to provide additional flexibility to perform 
     * 	more robust checks. The output can be from either standard output 
     * 	and/or standard error. 
     * 						
     * 					
     * 
     * @return
     *     possible object is
     *     {@link OutputCheckData }
     *     
     */
    public OutputCheckData getOutputCheck() {
        return outputCheck;
    }

    /**
     * Sets the value of the outputCheck property.
     * 
     * @param value
     *     allowed object is
     *     {@link OutputCheckData }
     *     
     */
    public void setOutputCheck(OutputCheckData value) {
        this.outputCheck = value;
    }

    /**
     * 
     * 						
     * 	The expected exit code from running the command. Typically the exit
     * 	code from successfully running a command is always zero. However, if
     * 	certain command are expected to provide a non-zero exit code that 
     * 	actually indicates a successful operation, then this value can be
     * 	used to specify a non-zero value.
     * 						
     * 					
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getExitCode() {
        return exitCode;
    }

    /**
     * Sets the value of the exitCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setExitCode(BigInteger value) {
        this.exitCode = value;
    }

    /**
     * 
     * 	The name of the executable to be run for this process. The value for
     * 	this attribute must match the name specified for an Executable entry
     * 	associated with a given genomic-assembler/DECAGON pipeline entry.
     * 				
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExecutable() {
        return executable;
    }

    /**
     * Sets the value of the executable property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExecutable(String value) {
        this.executable = value;
    }

}
