//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.18 at 06:29:58 PM EDT 
//


package org.peace_tools.decagon.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 	This is a convenience top-level element that is used to wrap a list of
 * 	arguments.
 * 			
 * 
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ArgumentList", namespace = "http://www.peace-tools.org/decagon/", propOrder = {
    "argument"
})
public class ArgumentList {

    @XmlElement(namespace = "http://www.peace-tools.org/decagon/", required = true)
    protected List<Argument> argument;

    /**
     * 
     *  	This is the element that encapsulates information about
     * 	command-line arguments that are passed to an executable.
     * 	Arguments can either refer to a parameter to be used or directly use 
     * 	a string value involving bind-variables.
     * 					Gets the value of the argument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the argument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getArgument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Argument }
     * 
     * 
     */
    public List<Argument> getArgument() {
        if (argument == null) {
            argument = new ArrayList<Argument>();
        }
        return this.argument;
    }

}
