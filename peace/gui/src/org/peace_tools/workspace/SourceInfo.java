//--------------------------------------------------------------------
//
// This file is part of PEACE.
// 
// PEACE is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// PEACE is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with PEACE.  If not, see <http://www.gnu.org/licenses/>.
// 
// Miami University makes no representations or warranties about the
// suitability of the software, either express or implied, including
// but not limited to the implied warranties of merchantability,
// fitness for a particular purpose, or non-infringement.  Miami
// University shall not be liable for any damages suffered by licensee
// as a result of using, result of using, modifying or distributing
// this software or its derivatives.
//
// By using or copying this Software, Licensee agrees to abide by the
// intellectual property laws, and all other applicable laws of the
// U.S., and the terms of GNU General Public License (version 3).
//
// Authors:   Dhananjai M. Rao              raodm@muohio.edu
//
//---------------------------------------------------------------------

package org.peace_tools.workspace;

import java.io.PrintWriter;
import org.w3c.dom.Element;

/**
 * This class encapsulates the information associated with the 
 * SourceInfo element in a PEACE workspace (XML) file.
 * 
 * A SourceInfo object contains information and reference to the 
 * source data set. The source data set refers to the source genes 
 * from which a file was generated. This is typically done via the
 * Synthetic DataSet Generator (SDG) component of DECAGON. The logs 
 * in the generated file may contain additional information about 
 * how the file was generated. The source information is need by
 * DECAGON to generate quality metrics for Contigs generated by 
 * an assembler.
 */
public class SourceInfo {
	/**
	 * Constructor to create a fully populated SourceInfo object.
	 * 
	 * @param filePath The full path to the source genes/cDNA file.
	 * This parameter cannot be null.
	 * 
	 * @param xmlPath The path to the PEACE XML definition file for
	 * the given source gene/cDNA file. This parameter can be null.
	 */
	public SourceInfo(final String filePath, final String xmlPath) {
		this.filePath   = filePath;
		this.xmlPath    = xmlPath;
	}
	
	/**
	 * Convenience constructor to load data from a DOM Tree
	 * 
	 * This constructor is typically used when loading data from an XML
	 * file. This constructor extracts the necessary information from a
	 * given root SourceInfo DOM element. 
	 *  
	 * @param sourceInfo The DOM element corresponding to the the
	 * SourceInfo XML element. This parameter cannot be null.
	 */
	public static SourceInfo create(final Element sourceInfo) {
		final String filePath = DOMHelper.getStringValue(sourceInfo, "Path");
		final String xmlPath  = DOMHelper.getStringValue(sourceInfo, "XMLPath", true);
		// Create a new object and return it back to the caller
		return new SourceInfo(filePath, xmlPath);
	}

	/**
	 * Method to marshall the data stored in this object to become part of
	 * a DOM tree element passed in. This method assumes that the element
	 * passed in corresponds to the parent Workspace node in the DOM tree.
	 * 
	 * @param workspace The DOM element corresponding to the "ESTData"
	 * node that contains this entry.
	 */
	public final void marshall(Element estData) {
		// Create a top-level entry for this "DataSet"
		Element srcInfo = DOMHelper.addElement(estData, "SourceInfo", null);
		// Add new sub-element for the stats node
		DOMHelper.addElement(srcInfo, "Path",    filePath);
		DOMHelper.addElement(srcInfo, "XMLPath", xmlPath);
	}
	
	/**
	 * Method to marshall the data stored in this object directly to a XML
	 * fragment. The XML fragment is guaranteed to be compatible with the PEACE
	 * work space configuration data.
	 * 
	 * @param out The stream to which the XML must be serialized.
	 */
	public final void marshall(PrintWriter out) {
		final String Indent      = "\t\t\t";
		final String STR_ELEMENT = Indent + "\t<%1$s>%2$s</%1$s>\n";
		
		// Create a top-level server entry for this server
		out.printf("%s<SourceInfo>\n", Indent); 
		// Add new sub-elements for the SourceInfo element
		out.printf(STR_ELEMENT, "Path",    filePath);
		out.printf(STR_ELEMENT, "XMLPath", (xmlPath != null ? xmlPath : ""));
		out.printf("%s</SourceInfo>\n", Indent); 
	}
	
	/**
	 * Obtain the path to the cDNA data file about this this object
	 * is currently holding meta data about. 
	 * 
	 * @return The path to the cDNA data file about which this object
	 * is currently holding statistics about.
	 */
	public String getPath() {
		return filePath;
	}
	

	/**
	 * The path to the source genes/cDNA file. This path may be different
	 * on various environments and workspaces.
	 */
	private final String filePath;
	
	/**
	 * An optional path to a separate XML file that contains the XML
	 * DataSet entry for the the {@link #filePath} file.
	 */
	private final String xmlPath;
}
