//--------------------------------------------------------------------
//
// This file is part of PEACE.
// 
// PEACE is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// PEACE is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with PEACE.  If not, see <http://www.gnu.org/licenses/>.
// 
// Miami University makes no representations or warranties about the
// suitability of the software, either express or implied, including
// but not limited to the implied warranties of merchantability,
// fitness for a particular purpose, or non-infringement.  Miami
// University shall not be liable for any damages suffered by licensee
// as a result of using, result of using, modifying or distributing
// this software or its derivatives.
//
// By using or copying this Software, Licensee agrees to abide by the
// intellectual property laws, and all other applicable laws of the
// U.S., and the terms of GNU General Public License (version 3).
//
// Authors:   Dhananjai M. Rao          raodm@muohio.edu
//
//---------------------------------------------------------------------

package org.peace_tools.data;


/**
 * A class that represents a single EST entry in PreAlignmentModel.
 * 
 * This class is a pure data class that is used to encapsulate the information
 * pertaining to the position of an EST node as used by the PreAlignmentModel 
 * class. This class is used to encapsulate information that is needed to 
 * represent the relative position of an EST in an alignment model. This 
 * class encapsulates the following information:
 * 
 *  <ul>
 *  
 *  <li>The data about the actual EST itself. This information is useful
 *  when rendering EST entries in a given view.</li>
 *  
 *  <li>The cluster number to which this EST belongs.</li>
 *  
 *  <li>The column from where this EST is to be rendered on screen.</li>
 *  
 *  </ul>
 */
public class ESTEntry {
	/** Constructor to create an object.
	 * 
	 * This constructor provides a convenient mechanism to create and 
	 * initialize an ESTEntry object with necessary information. This
	 * constructor is primarily used by the PreAlignmentModel class.
	 * 
	 * @param est The actual EST object for which this entry is being
	 * created. 
	 * 
	 * @param clusterID The ID of the cluster to which the given EST entry
	 * belongs. 
	 * 
	 * @param colPos The zero-based column position from where the EST
	 * is to be rendered. This column position indicates the position of
	 * the left-most nucleotide in the EST.
	 * 
	 * @see OverlapModel
	 */
	protected ESTEntry(EST est, int clusterID, int colPos) {
		this.est       = est;
		this.clusterID = clusterID;
		this.colPos    = colPos;
	}

	/** Returns the actual EST object set for this node.
	 * 
	 *  This method returns the actual EST entry associated with 
	 *  this entry when it was instantiated.
	 *   
	 *  @return The actual EST object set for this entry.
	 */
	public EST getEST() { return est; }

	/** Returns the ID of the cluster to which this entry belongs.
	 * 
	 *  This method returns the cluster ID value set for this entry
	 *  when it was instantiated.
	 *  
	 *  @return The ID of the cluster to which this entry belongs.
	 */
	public int getClusterID() { return clusterID; }

	/**
	 * Obtain the starting column position where this entry is to be placed.
	 * 
	 * @return The starting column position for this entry. This value
	 * indicates the position of the left-most nucleotide in this EST.
	 */
	public int getColumn() { return colPos; }
	
	/** The EST node for this ESTEntry. This value is set in the 
	 * constructor and is never changed during the life-time of this
	 * object.
	 */
	private final EST est;

	/** 
	 * The ID of the cluster to which the EST Entry belongs. This 
	 * information is set in the constructor and is never changed during the
	 * life time of this class.
	 */
	private final int clusterID;

	/** 
	 * The starting column position for this entry. This value is 
	 * set when this object is created.
	 */
	private final int colPos;

	/** The alignment metric generated by a given EST analyzer indicating some 
	 * of the alignment relationship between this node and its parent node.
	 */
	int alignmentMetric;
}
