#ifndef SHOW_MST_H
#define SHOW_MST_H

//--------------------------------------------------------------------
//
// This file is part of PEACE.
// 
// PEACE is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// PEACE is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with PEACE.  If not, see <http://www.gnu.org/licenses/>.
// 
// Miami University makes no representations or warranties about the
// suitability of the software, either express or implied, including
// but not limited to the implied warranties of merchantability,
// fitness for a particular purpose, or non-infringement.  Miami
// University shall not be liable for any damages suffered by licensee
// as a result of using, result of using, modifying or distributing
// this software or its derivatives.
//
// By using or copying this Software, Licensee agrees to abide by the
// intellectual property laws, and all other applicable laws of the
// U.S., and the terms of GNU General Public License (version 3).
//
// Authors:   Dhananjai M. Rao          raodm@muohio.edu
//
//---------------------------------------------------------------------

#include "Tool.h"
#include <stdio.h>
#include <vector>

/** A tool to convert MST to XFig file format for graphical viewing.

    This tool is used to graphically visualize the Minimum Spanning
    Tree (MST) generated by PEACE.  This tool essentially converts the
    flat file (generated by PEACE) containing MST data to an XFig file
    format.  The XFig file format can then be converted (using Linux
    command line tool \c fig2dev) to many different graphical formats
    (such as: PDF, PNG, GIF, JPEG, PS, EPS, etc.)

    For example, the following conceptual MST:

    <pre>

                            0
		  (dist=4) / \ (dist=5)
			  1   2
			      /\
		    (dist=8) /  \ (dist=10)
                            3    4
    </pre>

    would be represented in a flat file format generated by PEACE as:

    <pre>
    # Data format: <parentESTidx>,<estIdx>,<similarityMetric>
    -1,0,0
    0,1,4
    0,2,5
    2,3,8
    2,4,10
    </pre>

    The above flat file format is translated by this tool into a XFig
    file format (with the tree rotated by 90 degrees to ease
    generating the graphical file format) that can then be converted
    to many different graphical file formats (such as: PDF, PNG, GIF,
    JPEG, PS, EPS, etc.) using the command line utility \c fig2dev.
*/
class ShowMST : public Tool {
public:
    /** The main method to perform tasks for this class.

        This method is invoked from the ::main() method associated
        with PEACE tools once it has detected that the tool to be used
        is this ShowMST tool.  Any pending (unprocessed) command line
        parameters are passed to this method for its use.

        \param[in] argc The number of remaining command line arguments
        for use by this class/method.

        \param[in,out] argv The actual command line arguments for use
        by this class/method.
    */
    static int main(int argc, char *argv[]);
    
protected:
    /** The default constructor for this class.

        This class is meant to be instantiated only from the public
        static main() method.  Consequently, the constructor has been
        made private to force users to use the main() method instead.

        \param[in] xScale The x-scale factor for line lengths.  This
        ensures that distance values are suitably represented in the
        generated MST.

	\param[in] yScale The y-scale factor.  This parameter is used
        to scale the distance between successive lines in the
        generated figure.  This value ensures sufficient separation
        between adjacent lines to make the figure more readable and
        plesant.

	\param[in] showIndexOnly This flag is used to determine if the
	FASTA header associated with the ESt must be written to the
	output file.  If this flag is set to \c true then only index
	values are displayed. By default this flag is set to \c false
	to indicate that the FASTA header information must also be
	displayed.
    */
    ShowMST(const double xScale, const double yScale, const bool showIndexOnly);

    /** The destructor.

        The destructor frees any dynamic memory allocated to store the
        data members in this class.
    */
    ~ShowMST();

     /** Method to perform core drawing operation.

	This method is invoked (in a recursive manner) to render the
	graphical representation of the MST data (loaded from the
	supplied MST file generated by PEACE) to XFig file format.

	\param[in] node The node in the MST that must be rendered.  As
	this method is invoked recursively this value changes as
	sub-trees are rendered.

        \param[in] startX The starting top-left x-coordinate from
        where this sub-tree is to be rendered.

        \param[in] startY The starting top-left y-coordinate from
        where this sub-tree is to be rendered.        

        \param[out] endY The ending y-coordinate of the last leaf node
        up to which this sub-tree occupies vertical space in the
        graphic.
        
        \return This method returns the mid-point of the tree
        containing all child nodes (including sub-trees etc.)
    */
    int drawNode(const MSTguiNode& node,
                 const int startX, const int startY, int& endY);

    /** Method to perform render information about an EST.

	This method is invoked from the drawNode method to render the
	data associated with the EST in XFig format.
        
	\param[in] node The leaf node in the MST that must be
	rendered.
        
        \param[in] startX The starting top-left x-coordinate from
        where this sub-tree is to be rendered.
        
        \param[in] startY The starting top-left y-coordinate from
        where this sub-tree is to be rendered.        

        \param[out] endY The ending y-coordinate of the last leaf node
        up to which this sub-tree occupies vertical space in the
        graphic.
        
        \return This method returns the mid-point of the tree
        containing all child nodes (including sub-trees etc.)
    */    
    int drawESTinfo(const MSTguiNode& node,
                    const int startX, const int startY, int& endY);
    
    /** Method to obtain the ESTid and index information as a string.

	This mehtod is a helper method that is used to obtain the
	information to be displayed for each EST.  

	\param[in] node The node whose information must be retired for
	display purposes.

	\param[in] maxLen The maximum number of characters from the
	FASTA header that must be returend by this method.  If this
	value is -1 then the complete header is returned.  Note that
	this method returns the FASTA header only if the \c
	showIndexOnly flag is set to \c false.
    */
    std::string getESTId(const MSTguiNode& node, const int maxLen = -1);

private:
    /** The x-scale factor for line lengths.

        This instance variable is used to scale the distance values
        when actually rendering the lines in the XFig.  This ensures
        that distance values are suitably represented in the generated
        MST.
    */
    const double xScale;

    /** The y-scale factor for adjusting spacing between lines.

        This instance variable is used to scale the distance between
        successive lines in the generated figure.  This value ensures
        sufficient separation between adjacent lines to make the
        figure more readable and plesant.
    */
    const double yScale;

    /** Flag to indicate if FASTA header must be shown.

	This flag is used to determine if the FASTA header associated
	with the ESt must be written to the output file.  If this flag
	is set to \c true then only index values are displayed. By
	default this flag is set to \c false to indicate that the
	FASTA header information must also be displayed.
    */
    const bool showIndexOnly;
};

#endif
